name: Tea Bag CI Workflow

on: [ push, pull_request ]

jobs:

  Check:
    env:
      DEFAULT_BRANCH: master
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run static code analysis
        run: ./gradlew detektAll

  Test:
    env:
      DEFAULT_BRANCH: master
    needs: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      # workaround for Gradle since it can't run buildSrc tests from default location
      - name: Run buildSrc tests
        run: ./gradlew -p buildSrc test
      - name: Run tests
        run: ./gradlew ciTests
      - name: Archive test reports
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: tests-report
          path: build/junit-reports/**

  Deploy:
    env:
      DEFAULT_BRANCH: master
    needs: Test
    runs-on: ubuntu-latest
    # tags should be of the form:
    # <no-value> -> dev build
    # v1.2.3-alpha1 -> alpha build
    # v1.2.3-rc1 or v1.2.3-alpha4-rc5 -> alpha RC
    # v1.2.3 -> stable
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/develop'
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=GITHUB_TAG::${GITHUB_REF#refs/tags/}
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Publish artifacts
        run: ./gradlew releaseLibrary releasePlugin
        env:
          GITHUB_TAG: ${{ steps.get_version.outputs.GITHUB_TAG }}
          OSSRH_USER: ${{ secrets.OSSRH_USER }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          PUBLISH_PLUGIN_TOKEN: ${{ secrets.PUBLISH_PLUGIN_TOKEN }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: publish-artifacts
          path: build/artifacts/**